<?php
/**
 * Hello Controller for Hello World Component
 * 
 * @package    Joomla.Tutorials
 * @subpackage Components
 * @link http://docs.joomla.org/Developing_a_Model-View-Controller_Component_-_Part_4
 * @license		GNU/GPL
 */

// No direct access
defined( '_JEXEC' ) or die( 'Restricted access' );

/**
 * Hello Hello Controller
 *
 * @package    Joomla.Tutorials
 * @subpackage Components
 */
class BallotboxappsControllerBallotboxapp extends BallotboxappsController
{
	/**
	 * constructor (registers additional tasks to methods)
	 * @return void
	 */
	function __construct()
	{
		parent::__construct();

		// Register Extra tasks
		$this->registerTask( 'add'  , 	'edit' );
	}

	/**
	 * display the edit form
	 * @return void
	 */
	function edit()
	{
		$array = JRequest::getVar('cid',  0, '', 'array');
		$id = ((int)$array[0]);
		
		JRequest::setVar( 'view', 'ballotboxapp' );
		if($id){
			JRequest::setVar( 'layout', 'list'  );
			JRequest::setVar( 'year_id', $id  );
		}else{
			JRequest::setVar( 'layout', 'form'  );
		}
		
		JRequest::setVar('hidemainmenu', 1);

		parent::display();
	}
	function save_step2(){
		
		$election_year_id= JRequest::getVar('id');
		$ids 		= JRequest::getVar('office_id');//echo "<pre>";print_r($ids);echo "</pre>";die;
		$publish 	= JRequest::getVar('office_publish');
		$name 		= JRequest::getVar('office_name');
		$order 		= JRequest::getVar('publish_order');
		$election_name 		= JRequest::getVar('election_name');
		$election_date 		= JRequest::getVar('election_date');
		$model = $this->getModel('ballotboxapp');
		if($_REQUEST['deleted']){
			$model->delete_election($election_year_id);
			$model->delete_related($ids);
			$msg = JText::_( 'Record Deleted.' );
		}else{
			$active_office 		= array();
			$in_active_office   = array();
			
			$model->update_election_name($election_name , $election_year_id ,$election_date);
			
			//First Delete all wards and divisions from tables and then reinsert them. As it will save time and easy peasy task performance boost will occur by doing this.
			$model->delete_related($ids);
			
			$in_id = array();
			foreach($ids as $id=>$value){
				if($publish[$id]){
					$active_office[$id] = $name[$id];
					$model->update_office($order[$id] , $id , 1);
					$model->insert_office_ward($ids[$id] , $name[$id] ,$election_year_id);
				}else{
					$in_active_office[$id] = $name[$id];
					$in_id[] = 	$id;
					$model->update_office($order[$id] , $id , 0);
				}
			}
			//$model->bulk_insert($bulk_insert_array);
			$msg = JText::_( 'Data Saved' );
		}
		$link = 'index.php?option=com_ballotboxapp';
		$this->setRedirect($link, $msg);
		
	}
	/**
	 * save a record (and redirect to main page)
	 * @return void
	 */
	function save()
	{
		$e_year = JRequest::getVar('e_year');
		$include_header = (isset($_POST['header']) ? true : false);
		
		$model = $this->getModel('ballotboxapp');
		$insertStart = 'INSERT into #__rt_cold_data (office,ward,division,vote_type,name,party,votes,e_year,date_created) VALUES ';
		//$bulk_insert_array = array();
		$path = JPATH_COMPONENT.DS.'uploads'.DS;
		$fileName = $_FILES["fileToUpload"]["name"]; 
		$fileTmpLoc = $_FILES["fileToUpload"]["tmp_name"];
		// Path and file name
		$pathAndName = $path.$fileName;
		// Run the move_uploaded_file() function here
		$moveResult = move_uploaded_file($fileTmpLoc, $pathAndName);
		// Evaluate the value returned from the function if needed
		if ($moveResult == true) {
			$insert="";
			$counter = 0;
			$current_pointer = 0;
			$myfile = fopen($pathAndName, "r") or die("Unable to open file!");
			
			// Output one line until end-of-file
			while(!feof($myfile)) {
				if($myfile){
					
					$arr = explode("\t",fgets($myfile));
					if($include_header){
						$counter++;
						$include_header=false;
						continue;
					}
					
					if($counter > 10000 ){
						$counter = 0;
						$bulk_insert_array="";
						
						$insert = rtrim($insert,',');
						$bulk_insert_array.=$insertStart.$insert;
						$insert="";
						$model->bulk_insert($bulk_insert_array);
					}
					foreach($arr as $a_key=>$a_value){
						$arr[$a_key] = htmlspecialchars($a_value,ENT_QUOTES);
					}
					
					$insert.= '("'.$arr['3'].'","'.$arr['0'].'","'.$arr['1'].'","'.$arr['2'].'","'.$arr['4'].'","'.$arr['5'].'","'.$arr['6'].'","'.$e_year.'",NOW()),';	
					$current_pointer++;
					$counter++;
					if(feof($myfile) && $counter > 0){
						$bulk_insert_array="";
						
						$insert = rtrim($insert,',');
						$bulk_insert_array.=$insertStart.$insert;
						$insert="";
						$model->bulk_insert($bulk_insert_array);
					}
					
				}
			}
			//$insert = rtrim($insert,',');
			//$bulk_insert.=$insert;
			
			fclose($myfile);
			if($e_year){
				$year_id  = $model->insert_year($e_year);
				$office   = $model->insert_office($e_year , $year_id);
			}
			/* $str = implode(",",$bulk_insert_array);
			echo $str;die; */
			@unlink($pathAndName);
			$msg = JText::_( 'Data Saved' );
			$link = 'index.php?option=com_ballotboxapp&controller=ballotboxapp&task=edit&cid[]='.$year_id;
		} else {
			//echo "ERROR: File not moved correctly";
			$link = 'index.php?option=com_ballotboxapp';
			$msg = JText::_( 'ERROR: File not moved correctly' );
		}
		

		// Check the table in so it can be edited.... we are done with it anyway
		
		$this->setRedirect($link, $msg);
	}

	/**
	 * remove record(s)
	 * @return void
	 */
	function remove()
	{
		$model = $this->getModel('hello');
		if(!$model->delete()) {
			$msg = JText::_( 'Error: One or More Greetings Could not be Deleted' );
		} else {
			$msg = JText::_( 'Greeting(s) Deleted' );
		}

		$this->setRedirect( 'index.php?option=com_ballotboxapp', $msg );
	}

	/**
	 * cancel editing a record
	 * @return void
	 */
	function cancel()
	{
		$msg = JText::_( 'Operation Cancelled' );
		$this->setRedirect( 'index.php?option=com_ballotboxapp', $msg );
	}
}